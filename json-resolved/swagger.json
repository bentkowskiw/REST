{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a Homework assignment to create RESTful application using Java and Spring Boot.",
    "version" : "1.0.2",
    "title" : "Product RESTful",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "bentkowski@bentkowski.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "product",
    "description" : "Product artifact"
  }, {
    "name" : "order",
    "description" : "Order artifact"
  } ],
  "paths" : {
    "/products" : {
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Add a new product.",
        "description" : "Create a new product with unique SKU, name and price",
        "operationId" : "addProduct",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New product to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        }
      },
      "put" : {
        "tags" : [ "product" ],
        "summary" : "Update an existing product.",
        "description" : "An endpoint to update Product in store database.",
        "operationId" : "updateProduct",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Product object data to be updatet",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/products/find" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Finds all Products.",
        "description" : "Optional pageing attributes offset and limit.",
        "operationId" : "findProducts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid parameters supplied"
          },
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfProducts"
            }
          }
        }
      }
    },
    "/products/{productId}" : {
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "Deletes a product.",
        "description" : "Softly delete a product. That means it is marked as deleted.",
        "operationId" : "deleteProduct",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Product ID to delete",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "The resource was deleted successfully."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Product not found"
          }
        }
      }
    },
    "/orders" : {
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Place an order for a products.",
        "operationId" : "placeOrder",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "order placed for purchasing the product",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Order"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "400" : {
            "description" : "Invalid Order"
          }
        }
      }
    },
    "/orders/findInPeriod" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Finds orders within time period.",
        "description" : "Required params are startDate, endDate. Optional pageing attributes offset and limit.",
        "operationId" : "findOrdersInPeriod",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "description" : "The starting date.",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "The end date.",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before starting to collect the result set.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The numbers of items to return.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid parameters supplied"
          },
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfProducts"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Order" : {
      "type" : "object",
      "required" : [ "buyersEmail" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-07-21T17:32:28Z"
        },
        "buyersEmail" : {
          "type" : "string",
          "example" : "bentkowski@bentkowski.io"
        }
      },
      "xml" : {
        "name" : "Order"
      }
    },
    "Product" : {
      "type" : "object",
      "required" : [ "SKU", "name", "price" ],
      "properties" : {
        "SKU" : {
          "type" : "string",
          "example" : "A1001"
        },
        "name" : {
          "type" : "string",
          "example" : "Pink Sunglasses"
        },
        "price" : {
          "type" : "number",
          "format" : "double",
          "example" : 507.5
        },
        "dateCreated" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2017-07-21T17:32:28Z"
        }
      },
      "xml" : {
        "name" : "Product"
      }
    },
    "ArrayOfProducts" : {
      "xml" : {
        "name" : "ArrayOfProduct"
      },
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Product"
      }
    }
  }
}